{"models": {"flow_item": {"notes": null, "required": ["flow_uid", "flow_name", "lsp_uid", "status", "priority", "flows"], "properties": {"status": {"type": "string"}, "lsp_uid": {"type": "string"}, "flows": {"type": "string"}, "priority": {"type": "string"}, "flow_uid": {"type": "string"}, "flow_name": {"type": "string"}}, "description": null, "id": "flow_item"}, "lsp_item": {"notes": null, "required": ["uid", "from_router_name", "to_router_name", "bandwidth", "to_router_uid", "from_router_uid", "lsp_name", "hop_list", "path", "status", "user_data"], "properties": {"hop_list": {"type": "string"}, "status": {"type": "string"}, "uid": {"type": "string"}, "from_router_name": {"type": "string"}, "lsp_name": {"type": "string"}, "to_router_name": {"type": "string"}, "user_data": {"type": "string"}, "bandwidth": {"type": "string"}, "to_router_uid": {"type": "string"}, "path": {"type": "string"}, "from_router_uid": {"type": "string"}}, "description": null, "id": "lsp_item"}}, "basePath": "http://localhost:8670", "swaggerVersion": "1.2", "apiVersion": "v1.0", "apis": [{"operations": [{"parameters": [{"name": "node_list", "dataType": "JsonArray", "paramType": "body", "required": true, "description": "a list of equip property."}], "responseClass": "{\"err_code\":0, \"msg\":\"set equips finished\"}", "notes": "set equips, this will be added to te_driver, in order to adapter to <br/>different vendor's controller. <br /> Requested Sample <br /> {\"equips\":[ <br/>{\"vendor\": \"ZTE\", \"uid\": \"PE14Z\", \"pos\": \"Old village of Gao\", \"community\":<br/>\"roastedchikenPE14Z\", \"ip_str\": \"14.14.14.14\", \"y\": 48.9, \"x\": 113.8, <br/>\"model\": \"aladin\", \"name\": \"PE14Z\"} ]}", "responseMessages": [], "summary": "set equips(ne property) to te_driver", "httpMethod": "POST", "nickname": "set-nodes"}], "path": "/openoapi/sdno-driver-ct-te/v1/nodes:set-nodes", "description": null}, {"operations": [{"parameters": [{"name": "body", "dataType": "Json", "paramType": "body", "required": false, "description": "include lsp property uid and user_data"}], "responseClass": "lsp_item", "notes": "get all lsps or an lsp of certain lsp_uid(included in req_body) from <br/>different vendor's controller. <br />request body sample:<br /> {\"uid\": <br/>\"46\", \"user_data\": { \"lsp_id\": \"46\", \"from_router_uid\": \"PE11A\", <br/>\"lsp_name\": \"LSP_1-8\" }} <br /> uid: lsp_uid; <br /> user_data:lsp context,<br/>got from get-lsp or create-lsp response, if body include lsp_uid, user_data<br/>is necessary <br />Return Sample:<br /> [ {\"uid\": \"lsp_0\", <br/>\"from_router_name\": \"\", \"to_router_name\": \"\", \"bandwidth\": \"\", <br/>\"to_router_uid\": \"\", \"from_router_uid\": \"\", \"name\": \"\", \"hop_list\":[], <br/>\"path\":[], \"status\":0, \"priority\":7, \"delay\":\"\", \"user_data\":{}} ]", "responseMessages": [], "summary": "get all lsps or an lsp of certain lsp_uid(included in req_body)", "httpMethod": "POST", "nickname": "get-lsp"}], "path": "/openoapi/sdno-driver-ct-te/v1/lsps:get-lsp", "description": null}, {"operations": [{"parameters": [{"name": "body", "dataType": "Json", "paramType": "body", "required": false, "description": "include uid, user_data and callback"}], "responseClass": "{\"lsp_uid\":0, \"lsp_name\":\"\", \"status\":1}", "notes": "delete an lsp <br />request body sample: <br />{\"uid\": \"46\", \"user_data\": {<br/>\"lsp_id\": \"46\", \"from_router_uid\": \"PE11A\", \"lsp_name\": \"LSP_1-8\" }, <br/>\"callback\":\"http://127.0.0.1/path\"} <br /> *uid: lsp_uid <br /> <br/>*user_data:lsp context, got from get-lsp or create-lsp response, if body <br/>include lsp_uid, user_data is necessary <br /> *callback: delete lsp need <br/>sometime, in controller side will query delete status  per 10s until the <br/>lsp is really deleted, then controller will tell caller through 'callback' <br/>with http POST, so the callback need described as url. <br />callback <br/>Return Sample:<br /> {\"uid\": \"lsp_0\", \"from_router_name\": \"\", <br/>\"to_router_name\": \"\", \"bandwidth\": \"\", \"to_router_uid\": \"\", <br/>\"from_router_uid\": \"\", \"name\": \"\", \"hop_list\":[], \"path\":[], \"status\":0, <br/>\"priority\":7, \"delay\":\"\", \"user_data\":{}}", "responseMessages": [], "summary": "delete an lsp", "httpMethod": "POST", "nickname": "delete-lsp"}], "path": "/openoapi/sdno-driver-ct-te/v1/lsps:delete-lsp", "description": null}, {"operations": [{"parameters": [{"name": "body", "dataType": "Json", "paramType": "body", "required": true, "description": "lsp needed property description."}], "responseClass": "{\"lsp_uid\":0, \"lsp_name\":\"\", \"status\":1, \"user_data\":{}}", "notes": "create an lsp <br />Request Sample:<br /> {\"from_router_name\": \"\", <br/>\"to_router_name\": \"\", \"bandwidth\": \"\", \"to_router_uid\": \"\", <br/>\"from_router_uid\": \"\", \"callback\":\"http://127.0.0.1/path\", \"name\": \"\", <br/>\"hop_list\":[], \"priority\":7, \"delay\":\"\"} <br /> * lsp model property <br /><br/>*callback: create lsp need sometime, in controller side will query delete <br/>status  per 10s until the lsp is really created, then controller will tell <br/>caller through 'callback' with http POST, so the callback need described as<br/>url. <br />callback Return Sample:<br /> {\"uid\": \"lsp_0\", <br/>\"from_router_name\": \"\", \"to_router_name\": \"\", \"bandwidth\": \"\", <br/>\"to_router_uid\": \"\", \"from_router_uid\": \"\", \"name\": \"\", \"hop_list\":[], <br/>\"path\":[], \"status\":0, \"priority\":7, \"delay\":\"\", \"user_data\":{}}", "responseMessages": [], "summary": "create an lsp", "httpMethod": "POST", "nickname": "create-lsp"}], "path": "/openoapi/sdno-driver-ct-te/v1/lsps:create-lsp", "description": null}, {"operations": [{"parameters": [{"name": "body", "dataType": "Json", "paramType": "body", "required": true, "description": "include uid, bandwidth, user_data"}], "responseClass": "{\"lsp_uid\":0, \"lsp_name\":\"\", \"status\":1}", "notes": "update an lsp, the case only accepted for bandwidth property <br />request <br/>body sample: <br />{\"uid\": \"46\", \"user_data\": { \"lsp_id\": \"46\", <br/>\"from_router_uid\": \"PE11A\", \"lsp_name\": \"LSP_1-8\" }, <br/>\"callback\":\"http://127.0.0.1/path\", \"bandwidth\":\"\"} <br /> *uid: lsp_uid <br/><br /> *user_data:lsp context, got from get-lsp or create-lsp response, if <br/>body include lsp_uid, user_data is necessary", "responseMessages": [], "summary": "update an lsp", "httpMethod": "POST", "nickname": "update-lsp"}], "path": "/openoapi/sdno-driver-ct-te/v1/lsps:update-lsp", "description": null}, {"operations": [{"parameters": [{"name": "body", "dataType": "Json", "paramType": "body", "required": true, "description": "include flow_uid, user_data and callback"}], "responseClass": null, "notes": "delete one flow policy <br />request body sample: <br />{\"uid\": \"46\", <br/>\"user_data\": {\"lsp_id\": \"49\", \"flow_id\": \"flow_LSP_rest_1-6-5-8\", <br/>\"from_router_uid\": 2, \"flow_name\": \"lsp_LSP_rest_1-6-5-8_100\", \"lsp_name\": <br/>\"LSP_rest_1-6-5-8\"}, \"callback\":\"http://127.0.0.1/path\"} <br /> *uid: <br/>flow_uid <br /> *user_data:lsp&flow context, got from create-flow callback <br/>response <br /> *callback: delete flow need sometime, in controller side <br/>will query delete status  per 10s until the flow is really deleted, then <br/>controller will tell caller through 'callback' with http POST, so the <br/>callback need described as url. <br />callback Return Sample:<br /> <br/>{\"flow_src\": \"\", \"flow_dst\": \"\", \"flow_uid\": \"\",\"status\":1, \"user_data\": <br/>{}}", "responseMessages": [], "summary": "delete one flow policy", "httpMethod": "POST", "nickname": "delete-flow-policy"}], "path": "/openoapi/sdno-driver-ct-te/v1/flow-policy:delete-flow-policy", "description": null}, {"operations": [{"parameters": [{"name": "body", "dataType": "Json", "paramType": "body", "required": true, "description": "add flow to lsp, needed property description"}], "responseClass": null, "notes": "add flow to lsp <br/>Request body Sample<br/> {\"flow_name\": \"\", \"lsp_uid\": <br/>\"lsp_0\", \"priority\":7, \"flow\": {\"src\": \"1.2.3.0/24\", \"dst\": <br/>\"5.6.7.8/24\"},\"user_data\": {'lsp_id': '41', 'from_router_uid': 'PE11A', <br/>'lsp_name': 'ALU_S'}, \"callback\":\"http://127.0.0.1/path\"} <br /> <br/>*user_data:lsp context, got from get-lsp or create-lsp response, when add <br/>flow to lsp, the lsp's user_data is necessary <br /> *callback: add flow to<br/>lsp need sometime, in controller side will query delete status  per 10s <br/>until the lsp is really added, then controller will tell caller through <br/>'callback' with http POST, so the callback need described as url. <br /> <br/>callback Return Sample:<br /> {\"flow_src\": \"\", \"flow_dst\": \"\", \"flow_uid\": <br/>\"\",\"status\":1, \"user_data\": {}}", "responseMessages": [], "summary": "add flow to lsp", "httpMethod": "POST", "nickname": "create-flow-policy"}], "path": "/openoapi/sdno-driver-ct-te/v1/flow-policy:create-flow-policy", "description": null}, {"operations": [{"parameters": [{"name": "flow_uid", "dataType": "String", "paramType": "body", "required": false, "description": "flow policy unique key"}], "responseClass": "flow_item", "notes": "get all flow policy or one flow policy of certain flow_uid <br/>Request <br/>body Sample<br/> [ {\"uid\": \"flow_uid\", \"user_data\": {\"lsp_id\": \"49\", <br/>\"flow_id\": \"flow_LSP_rest_1-6-5-8\", \"from_router_uid\": 2, \"flow_name\": <br/>\"lsp_LSP_rest_1-6-5-8_100\", \"lsp_name\": \"LSP_rest_1-6-5-8\"}} ]", "responseMessages": [], "summary": "get all flow policy or one flow policy of certain flow_uid(included in <br/>req_body)", "httpMethod": "POST", "nickname": "get-flow-policy"}], "path": "/openoapi/sdno-driver-ct-te/v1/flow-policy:get-flow-policy", "description": null}, {"operations": [{"parameters": [{"name": "body", "dataType": "Json", "paramType": "body", "required": true, "description": "controller_id, create_link needed parameters"}], "responseClass": null, "notes": "create_link <br/>Request body Sample<br/> {\"controller_id\": \"\", <br/>\"link_parameters\": {}}", "responseMessages": [], "summary": "create_link", "httpMethod": "POST", "nickname": "create-link"}], "path": "/openoapi/sdno-driver-ct-te/v1/links:create-link", "description": null}]}